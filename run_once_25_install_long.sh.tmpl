#!/usr/bin/env bash

# I separate two installation scripts to those which run slower or faster.
# So when I modify the installation script, chezmoi apply won't take
# too long

{{ if (ne .chezmoi.os "darwin") }}
echo Skipping install long
exit 0
{{ end }}

# Check environment

if [[ "$TERM" =~ "screen".* ]]; then
  echo "This script must not be run under a tmux/screen session."
  exit 1
fi

if [[ $EUID -eq 0 ]]; then
  echo "This script must not be run as root"
  exit 1
fi

cd {{ .chezmoi.sourceDir }}
pwd

# Ask for the administrator password upfront
echo "Asking for sudo privileges."
sudo -v

# Keep-alive: update existing `sudo`
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# prevent sleep. we will kill this later
caffeinate &
CAFFEINATEPID=$!

set -eE # same as: `set -o errexit -o errtrace`

function cleanup()
{
  kill $CAFFEINATEPID
}

trap cleanup EXIT

set -x

if ! command -v brew &> /dev/null; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# if [ ! -f /usr/local/lib/opensc-pkcs11.so ]; then
#   # Workaround of https://github.com/OpenSC/OpenSC/issues/1008
#   sudo rm /usr/local/lib/opensc-pkcs11.so
#   sudo cp /usr/local/Cellar/opensc/0.20.0/lib/opensc-pkcs11.so /usr/local/lib
# fi

# Install Powerline compatible fonts
# echo Installing Powerline fonts.
# git clone https://github.com/powerline/fonts.git --depth=1
# cd fonts && ./install.sh
# cd .. && rm -rf fonts

# Homebrew
brew update

# we prioritise these first, for fresh installs these are more important
brew install mas 1password dropbox || true

export HOMEBREW_NO_AUTO_UPDATE=1
brew upgrade || true
brew analytics off

brew bundle --verbose || true
BREW_PREFIX=$(brew --prefix)

sudo gem install cocoapods

set +x
