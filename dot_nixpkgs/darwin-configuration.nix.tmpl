{ config, pkgs, ... }:

{
  # The trick to get those configuration keys:
  # $ defaults read > before
  # $ defaults read > after
  # $ diff before after

  # Hostname
  networking.computerName = {{ .darwin_hostname | quote }};
  networking.hostName = {{ .darwin_hostname | quote }};
  system.defaults.smb.NetBIOSName = {{ .darwin_hostname | quote }};

  system.defaults = {
    LaunchServices = {
      # Disable quarantine for downloaded applications.
      LSQuarantine = false;
    };

    trackpad = {
      # Enable tap to click
      Clicking = true;

      # Enable three finger drag
      TrackpadThreeFingerDrag = true;
    };

    finder = {
      # Always show hidden files
      "AppleShowAllFiles" = true;

      # Always show file extensions
      "AppleShowAllExtensions" = true;

      # Show status bar at bottom of finder windows with item/disk space stats
      "ShowStatusBar" = true;

      # Show path breadcrumbs in finder windows
      "ShowPathbar" = true;

      # Show the full POSIX filepath in the window title
      "_FXShowPosixPathInTitle" = true;

      # When performing a search, search the current folder by default
      "FXDefaultSearchScope" = "SCcf";

      # Disable the warning when changing a file extension
      "FXEnableExtensionChangeWarning" = false;

      # Use list view in all Finder windows by default
      "FXPreferredViewStyle" = "Nlsv";
    };

    screencapture = {
      # Save screenshots to the desktop
      "location" = "{{ .chezmoi.homeDir }}/Desktop";

        # Save screenshots in PNG format
      "type" = "png";
    };

    dock = {
      # Do not show recent apps
      "show-recents" = false;

      # Do not automatically rearrange spaces based on most recent use
      "mru-spaces" = false;

      # Autohide immediately
      "autohide-delay" = 0.0;

      # Speed of the animation when hiding/showing the Dock
      "autohide-time-modifier" = 0.0;

      # Automatically hide and show the dock
      "autohide" = true;

      # Position of the dock on screen
      "orientation" = "left";

      # Size of the icons in the dock (default 64)
      "tilesize" = 40;
    };

    NSGlobalDomain = {
      # Automatically switch between light and dark mode
      AppleInterfaceStyleSwitchesAutomatically = true;
      
      # Trackpad: enable tap to click
      "com.apple.mouse.tapBehavior" = 1;

      # Expand save panel by default
      "NSNavPanelExpandedStateForSaveMode" = true;
      "NSNavPanelExpandedStateForSaveMode2" = true;

      # Expand print panel by default
      "PMPrintingExpandedStateForPrint" = true;
      "PMPrintingExpandedStateForPrint2" = true;

      # Finder: show all filename extensions
      "AppleShowAllExtensions" = true;

      # Save to disk (not to iCloud) by default
      "NSDocumentSaveNewDocumentsToCloud" = false;
    };

    CustomUserPreferences = {
      "NSGlobalDomain" = {
        # Add a context menu item for showing the Web Inspector in web views
        "WebKitDeveloperExtras" = true;
      };

      "com.apple.Safari.SandboxBroker" = {
        # Enable the Develop menu and the Web Inspector
        "ShowDevelopMenu" = 1;
      };

      "com.apple.finder" = {
        # Keep folders on top when sorting by name
        "_FXSortFoldersFirst" = true;

        # Expand some File Info panes
        # "FXInfoPanesExpanded" = {
        #   "General" = true;
        #   "OpenWith" = true;
        #   "Privileges" = true;
        # };
      };

      "com.apple.terminal" = {
        # Only use UTF-8
        StringEncodings = (4);
      };

      "com.apple.mail" = {
        # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>`
        AddressesIncludeNameOnPasteboard = false;
      };

      "com.apple.TimeMachine" = {
        # Prevent Time Machine from prompting to use new hard drives as backup volume
        DoNotOfferNewDisksForBackup = true;
      };

      "com.apple.TextEdit" = {
        # Use plain text mode for new documents
        RichText = 0;

        # Open and save files as UTF-8
        PlainTextEncoding = 4;
        PlainTextEncodingForWrite = 4;
      };

      "com.apple.DiskUtility" = {
        # Enable the debug menu
        DUDebugMenuEnabled = true;
        "advanced-image-options" = true;
      };

      "com.apple.QuickTimePlayerX" = {
        # Auto-play videos
        MGPlayMovieOnOpen = true;
      };

      "com.apple.appstore" = {
        # Enable the WebKit Developer Tools in the Mac App Store
        WebKitDeveloperExtras = true;

        # Enable Debug Menu in the Mac App Store
        ShowDebugMenu = true;
      };

      "com.apple.SoftwareUpdate" = {
        # Enable the automatic update check
        AutomaticCheckEnabled = true;

        # Download newly available updates in background
        AutomaticDownload = 1;

        # Install System data files & security updates
        CriticalUpdateInstall = 1;
      };

      "com.apple.commerce" = {
        # Turn on app auto-update
        AutoUpdate = true;
      };

      "com.apple.ImageCapture" = {
        # Prevent Photos from opening automatically when devices are plugged in
        disableHotPlug = true;
      };

      "com.apple.ActivityMonitor" = {
        # Show the main window when launching
        OpenMainWindow = true;

        # Visualize CPU usage in the Dock icon
        IconType = 5;

        # Show all processes
        ShowCategory = 0;

        # Sort results by CPU usage
        SortColumn = "CPUUsage";
        SortDirection = 0;
      };

      "com.apple.desktopservices" = {
        # Avoid creating .DS_Store files on network volumes
        "DSDontWriteNetworkStores" = true;

        # Avoid creating .DS_Store files on USB volumes
        "DSDontWriteUSBStores" = true;
      };

      "com.apple.Safari" = {
        # Press Tab to highlight each item on a web page
        "WebKitTabToLinksPreferenceKey" = true;
        "com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks" = true;

        # Show the full URL in the address bar (note: this still hides the scheme)
        "ShowFullURLInSmartSearchField" = true;

        # Prevent Safari from opening ‘safe’ files automatically after downloading
        "AutoOpenSafeDownloads" = false;

        # Enable continuous spellchecking
        "WebContinuousSpellCheckingEnabled" = true;

        # Disable auto-correct
        "WebAutomaticSpellingCorrectionEnabled" = false;

        # Enable warns about fraudulent websites
        "WarnAboutFraudulentWebsites" = true;

        # Enable DNT header
        "SendDoNotTrackHTTPHeader" = true;

        # Set home page to `about:blank` for faster loading
        "HomePage" = "about:blank";

        # Enable Safari’s debug menu
        "IncludeInternalDebugMenu" = true;

        # Enable the Develop menu and the Web Inspector
        "IncludeDevelopMenu" = 1;
        "WebKitPreferences.developerExtrasEnabled" = 1;
        "WebKitDeveloperExtrasEnabledPreferenceKey" = true;
        "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled" = true;

        # use 1Password autofill instead of the built-in one
        "AutoFillCreditCardData" = 0;
        "AutoFillFromAddressBook" = 0;
        "AutoFillMiscellaneousForms" = 0;
        "AutoFillPasswords" = 0;
      };
    };
  };

  # Enable sudo authentication with Touch ID
  security.pam.enableSudoTouchIdAuth = true;
  
  homebrew = {
    enable = true;

    brews = [
      "blueutil"
      "carthage"
      "create-dmg"
      "dex2jar"
      "dns2tcp"
      "dnslookup"
      "flarectl"
      "git-delta"
      "gnu-getopt"
      "gnu-sed"
      "gnu-tar"
      "hashpump"
      "helm"
      "heroku-node"
      "hopenpgp-tools"
      "hydra"
      "knock"
      "kubernetes-cli"
      "locateme"
      "macvim"
      "screenresolution"
      "tcptrace"
      "telnet"
      "testssl"
      "tidy-html5"
      "whatmask"
      "ykman"
      "ykpers"
      "ytop"
    ];

    casks = [
      "wireshark"
      "1password"
      "1password-cli"
      "adobe-creative-cloud"
      "arc"
      "adoptopenjdk"
      "backblaze"
      "balenaetcher"
      "cloudytabs"
      "dropbox"
      "font-fira-code"
      "font-hack-nerd-font"
      "font-menlo-for-powerline"
      "font-source-code-pro"
      "google-chrome"
      "handbrake"
      "imazing"
      "key-codes"
      "linkliar"
      "macmediakeyforwarder"
      "mounty"
      "netnewswire"
      "nrlquaker-winbox"
      "orbstack"
      "parsec"
      "quicklook-csv"
      "quicklook-json"
      "quicklookapk"
      "setapp"
      "skype"
      "sloth"
      "sublime-text"
      "suspicious-package"
      "teamviewer"
      "telegram"
      "typora"
      "wechat"
      "zoom"
    ];

    taps = [
      "adoptopenjdk/openjdk"
      "ameshkov/tap"
      "birkhofflee/birkhoff"
      "bramstein/webfonttools"
      "buo/cask-upgrade"
      "cjbassi/ytop"
      "cloudflare/cloudflare"
      "derailed/k9s"
      "dteoh/sqa"
      "fabianishere/personal"
      "getantibody/tap"
      "gofireflyio/aiac"
      "golangci/tap"
      "hashicorp/tap"
      "heroku/brew"
      "homebrew/bundle"
      "homebrew/cask-fonts"
      "homebrew/cask-versions"
      "homebrew/cask"
      "homebrew/command-not-found"
      "homebrew/core"
      "homebrew/services"
      "joedrago/repo"
      "louisbrunner/valgrind"
      "xgadget-lab/nexttrace"
      "zurawiki/brews"
    ];

    masApps = {
      "Amphetamine" = 937984704;
      "Craft" = 1487937127;
      "DaisyDisk" = 411643860;
      "DevCleaner" = 1388020431;
      "GarageBand" = 682658836;
      "GoodNotes" = 1444383602;
      "iMovie" = 408981434;
      "Keynote" = 409183694;
      "LINE" = 539883307;
      "Microsoft Excel" = 462058435;
      "Microsoft PowerPoint" = 462062816;
      "Microsoft Word" = 462054704;
      "Numbers" = 409203825;
      "Pages" = 409201541;
      "QQ" = 451108668;
      "Slack" = 803453959;
      "Tab Space" = 1473726602;
      "Tailscale" = 1475387142;
      "The Unarchiver" = 425424353;
      "Transmit" = 1436522307;
      "WireGuard" = 1451685025;
      "Xcode" = 497799835;
      "Yoink" = 457622435;
    };
  };

  # Allow installing packages with unfree licenses
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search by name, run:
  # $ nix-env -qaP | grep wget
  environment.systemPackages = with pkgs; [
    fzf
    cht-sh
    ack
    aiac
    asciinema
    aspell
    autoconf
    automake
    autossh
    aws-vault
    awscli2
    azure-cli
    backblaze-b2
    bash
    bat
    bfg-repo-cleaner
    binwalk
    caddy
    chezmoi
    cmake
    coreutils
    cowsay
    curl
    dialog
    diff-so-fancy
    difftastic
    discord
    dnscontrol
    dockutil
    docutils
    entr
    exa
    fasd
    fd
    ffmpeg
    foremost
    gcc
    gh
    git
    git-lfs
    gnugrep
    gnupg
    go
    golangci-lint
    gotop
    gptcommit
    guile
    hey
    hstr
    htop
    httpie
    hub
    iina
    imagemagick
    iperf
    iterm2
    jc
    jq
    k9s
    knot-dns
    kubectx
    kustomize
    lolcat
    lsd
    lux
    m-cli
    magic-wormhole
    mas
    micromamba
    mitmproxy
    mosh
    mtr
    nali
    ncdu
    neofetch
    nexttrace
    nmap
    nomad
    noti
    oci-cli
    openssh
    optipng
    osx-cpu-temp
    ouch
    packer
    pam-reattach
    pinentry
    pinentry_mac
    pkg-config
    postman
    powershell
    procs
    progress
    putty
    pv
    qpdf
    R
    raycast
    rbenv
    reattach-to-user-namespace
    rectangle
    redis
    rename
    restic
    rtmpdump
    ruby
    rustup
    screen
    silver-searcher
    skaffold
    slides
    socat
    speedtest-cli
    sqlmap
    ssh-copy-id
    sslscan
    stress
    tcpflow
    tcping-go
    tcpreplay
    tcptraceroute
    terminal-notifier
    terraform
    terraformer
    tmux
    tree
    utm
    vagrant
    vbindiff
    viddy
    vscode
    wakeonlan
    wget
    wifi-password
    wireguard-go
    wireguard-tools
    woff2
    yamllint
    yarn
    youtube-dl
    yubico-piv-tool
    zoxide
    zsh
  ];

  # Use a custom configuration.nix location.
  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix
  # environment.darwinConfig = "$HOME/.config/nixpkgs/darwin/configuration.nix";

  # Auto upgrade nix package and the daemon service.
  services.nix-daemon.enable = true;
  # nix.package = pkgs.nix;
  nix.extraOptions = "experimental-features = nix-command flakes";

  # Create /etc/zshrc that loads the nix-darwin environment.
  programs.zsh.enable = true;  # default shell on catalina
  # programs.fish.enable = true;

  # Used for backwards compatibility, please read the changelog before changing.
  # $ darwin-rebuild changelog
  system.stateVersion = 4;
}
